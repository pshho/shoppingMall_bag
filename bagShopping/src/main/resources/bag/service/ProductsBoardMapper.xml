<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC ".//mybatis.org/DTD Mapper3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bag.service.ProductsBoardMapper">
	
	<select id="allPrbList" resultType="prbDTO">
		select * from products_board
	</select>
	
	<select id="productsBoardList" resultType="prbDTO">
		select * from products_board
		<where>
			<if test="brandId!=0">
				brand_id = #{brandId}
			</if>
			<if test="categoriesId!=0">
				categories_id = #{categoriesId}
			</if>
			<if test="typeId!=0">
				and type_id = #{typeId}
			</if>
			<if test="productsBoardStatus!=0">
				and products_board_status = #{productsBoardStatus}
			</if>
		</where>
		order by products_board_id desc
	</select>
	
	<sql id="wh_prbBoardId">
		<where>
			<if test="productsBoardId!=0">
				products_board_id = #{productsBoardId}
			</if>
		</where>
	</sql>
	
	<select id="productsBoard" resultType="prbDTO">
		select * from products_board <include refid="wh_prbBoardId" />
	</select>
	<select id="maxPrbId" resultType="Integer">
		select max(products_board_id) from products_board
	</select>
	<insert id="writeProduct" parameterType="prbDTO">
		insert into products_board(products_board_status, categories_id, type_id, brand_id, intro, contents, address_info, guide, product_code, review_count)
		values
		(#{productsBoardStatus}, #{categoriesId}, #{typeId}, #{brandId}, #{intro}, #{contents}, #{addressInfo}, #{guide}, #{productCode}, 0)
	</insert>
	<delete id="deleteProduct" parameterType="Integer">
		delete from products_board <include refid="wh_prbBoardId" />
	</delete>
	<update id="updateProduct" parameterType="prbDTO">
		update products_board set categories_id = #{categoriesId}, type_id = #{typeId}, brand_id = #{brandId},
		intro = #{intro}, contents = #{contents}, address_info = #{addressInfo}, guide = #{guide}, product_code = #{productCode}
		<include refid="wh_prbBoardId" />
	</update>
	<select id="searchList" resultType="prbDTO">
		select pb.* from products_board as pb
		left join type as t on pb.type_id = t.type_id
		left join brand as b on pb.brand_id = b.brand_id
		left join categories as c on pb.categories_id = c.categories_id
		left join bags as pd on pb.product_code = pd.product_code
		where
		t.type_name like concat('%', #{searchCont}, '%') or
		b.brand_name like concat('%', #{searchCont}, '%') or
		c.categories_name like concat('%', #{searchCont}, '%') or
		pd.bag_name like concat('%', #{searchCont}, '%') or
		intro like concat('%', #{searchCont}, '%') or contents like concat('%', #{searchCont}, '%')
		order by products_board_id desc
	</select>
	<update id="updateReviewCount" parameterType="Integer">
		update products_board set review_count = review_count + 1 where products_board_id = #{productsBoardId}
	</update>
	<update id="subReviewCount" parameterType="Integer">
		update products_board set review_count = review_count - 1 where products_board_id = #{productsBoardId}
	</update>
	<update id="updateSells" parameterType="Integer">
		update products_board set sells_amount = #{sells} where product_code = #{productCode}
	</update>
	
	<select id="prbIds" resultType="Integer">
		select products_board_id from products_board
		where product_code in
		<foreach collection="prdCodes" item="prd" separator="," open="(" close=")">
			#{prd}
		</foreach>
	</select>
	
	<select id="cntProduct">
		select * from products_board where product_code = #{productCode}
	</select>
	
	<delete id="deleteBagProduct">
		delete from products_board where product_code = #{productCode}
	</delete>
</mapper>