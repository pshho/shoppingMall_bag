<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC ".//mybatis.org/DTD Mapper3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bag.service.OrdersMapper">
	<insert id="orderInsert" parameterType="ordDTO">
		insert into orders
		(orders_total_price, delivery_fee, order_status, merchant_uid,
		pay_type, member_id,
		imp_uid, prod_code, prod_count, prd_name,
		buyer_name,
		buyer_email,
		buyer_tel, buyer_addr, buyer_postcode,
		address_msg, orders_reg_date)
		values
		(#{ordersTotalPrice},
		#{deliveryFee}, #{orderStatus}, #{merchant_uid},
		#{payType},
		#{memberId}, #{imp_uid}, #{prodCode}, #{prodCount},
		#{prdName},
		#{buyerName}, #{buyerEmail}, #{buyerTel}, #{buyerAddr},
		#{buyerPostcode},
		#{addressMsg}, #{ordersRegDate})
	</insert>

	<sql id="searchSales">
		<choose>
			<when
				test="searchType=='S'.toString() and keyword != null and keyword != '' ">
				AND order_status like CONCAT('%', #{keyword}, '%')
			</when>
			<when
				test="searchType=='I'.toString() and keyword != null and keyword != '' ">
				AND merchant_uid like CONCAT('%', #{keyword}, '%')
			</when>
			<when
				test="searchType=='PC'.toString() and keyword != null and keyword != '' ">
				AND prod_code like CONCAT('%', #{keyword}, '%')
			</when>
			<when
				test="searchType=='B'.toString() and keyword != null and keyword != '' ">
				AND buyer_name like CONCAT('%', #{keyword}, '%')
			</when>
			<when
				test="searchType=='CR'.toString() and keyword != null and keyword != '' ">
				AND cancel_reason like CONCAT('%', #{keyword}, '%')
			</when>
		</choose>
	</sql>

	<sql id="searchDate">
		<choose>
			<when test="keyword != null and keyword != ''">
				<if test="dateStart != null and dateStart != ''">
					and orders_reg_date >=
					str_to_date(#{dateStart},'%Y-%m-%d')
				</if>
				<if test="dateEnd != null and dateEnd != ''">
					and orders_reg_date <![CDATA[<]]>
					str_to_date(#{dateEnd},'%Y-%m-%d')+1
				</if>
			</when>
			<otherwise>
				<if test="dateStart != null and dateStart != ''">
					where orders_reg_date >=
					str_to_date(#{dateStart},'%Y-%m-%d')
				</if>
				<if test="dateEnd == null and dateEnd == ''">
					and orders_reg_date <![CDATA[<]]>
					str_to_date(#{dateEnd},'%Y-%m-%d')+1
				</if>
			</otherwise>
		</choose>
	</sql>

	<select id="orderList" parameterType="PageData2">
		select * from orders
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<include refid="searchSales" />
		</trim>

		<include refid="searchDate" />

		order by order_id desc
		limit #{start},#{limit}
	</select>

	<select id="orderCnt" parameterType="PageData2">
		select count(*) from orders
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<include refid="searchSales" />
		</trim>

		<include refid="searchDate" />

	</select>

	<select id="myPageOrdList" parameterType="map">
		select * from orders
		where member_id = #{id} order by order_id desc limit #{pd.start},
		#{pd.limit}
	</select>

	<select id="myOrdCnt">
		select count(*) from orders where member_id = #{id}
	</select>

	<select id="cancelOrder" resultType="ordDTO">
		select * from orders where
		merchant_uid = #{merchantUid}
	</select>

	<select id="getOrder" resultType="ordDTO">
		select * from orders where
		merchant_uid = #{merchantUid}
	</select>
	<update id="shipChange" parameterType="ordDTO">
		update orders set
		order_status = #{orderStatus} where merchant_uid = #{merchant_uid}
	</update>

	<update id="cancelOrderUpdate" parameterType="ordDTO">
		update orders set
		order_status = #{orderStatus}, cancel_reason = #{cancelReason} where
		merchant_uid = #{merchant_uid}
	</update>

	<select id="monthSales">
		SELECT SUBSTR(A.orders_reg_date,1,7) MM,
		SUM(A.orders_total_price) AS SALES
		FROM orders A where order_status = '배송 완료'
		GROUP
		BY 1
		ORDER
		BY 1;
	</select>

	<select id="yearSales">
		SELECT SUBSTR(A.orders_reg_date,1,4) YY,
		SUM(A.orders_total_price) AS SALES
		FROM orders A where order_status = '배송 완료'
		GROUP
		BY 1
		ORDER
		BY 1;
	</select>

	<select id="chkOrder" resultType="ordDTO">
		select * from orders where
		member_id = #{memberId} and order_status = #{orderStatus}
	</select>
</mapper>